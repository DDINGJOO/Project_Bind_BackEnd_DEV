server:
  port: ${AUTH_SEVER_PORT}

spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP} # e.g. localhost:9093


  datasource:
    url: jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${AUTH_MYSQL_DB}
    username: ${MYSQL_USER}
    password: ${MYSQL_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update # 또는 create, create-drop, none, validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true



  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

jwt:
  secret: ${JWT_SECRET}
  access-token-validity-ms: 900000      # 15분
  refresh-token-validity-ms: 1209600000 # 14일


oauth:
  google:
    client-id: your-client-id
    client-secret: your-client-secret
    redirect-uri: http://localhost:8080/code/google
    token-uri: https://oauth2.googleapis.com/token
    user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo

app:
  kafka:
    event-topics: user-registered-events,user-login-events
    consumer-group: auth-service-group
